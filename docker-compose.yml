version: '3.8'

services:
  developer:
    build:
      context: ./gemini-cli
      dockerfile: Dockerfile
    environment:
      # Load the API key from a .env file in the same directory
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      # GitHub environment variables for repository operations
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_OWNER=${GITHUB_OWNER}
      - GITHUB_REPO=${GITHUB_REPO}
      - GITHUB_REPOSITORY_URL=${GITHUB_REPOSITORY_URL}
      # JIRA environment variables
      - JIRA_URL=${JIRA_URL}
      - JIRA_USERNAME=${JIRA_USERNAME}
      - JIRA_API_TOKEN=${JIRA_API_TOKEN}
      - JIRA_PROJECT=${JIRA_PROJECT}
      # Discord environment variables
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      # Set GEMINI_SYSTEM_MD to load your custom GEMINI.md as the primary system instruction
      # This is crucial for ensuring your GEMINI.md overrides default behaviors if needed.
      # The value should be the path *inside the container*.
      - GEMINI_SYSTEM_MD=/app/GEMINI.md
      - DEBUG=gemini*
    volumes:
      # Mount the GEMINI.md file into the container at the expected path
      - ./gemini-cli/GEMINI.md:/app/GEMINI.md
      # Mount the plan.md file into the container
      - ./gemini-cli/plan.md:/app/plan.md
      # Mount any additional settings or configuration files if needed
      - ./gemini-cli/settings.json:/app/.gemini/settings.json
      # Mount the entire MCP servers directory so they can be executed locally
      - ./mcps:/app/mcps
    restart: unless-stopped
    command: ["gemini", "--model", "gemini-2.5-flash-lite","-y", "-p", "@/app/plan.md"]
