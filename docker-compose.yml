version: '3.8'

services:
  developer:
    build:
      context: ./gemini-cli
      dockerfile: Dockerfile
    volumes:
      - ./gemini-cli:/app
      - ./gemini-cli/GEMINI.md:/app/GEMINI.md
      - ./gemini-cli/settings.json:/app/.gemini/settings.json
    environment:
      # Load the API key from a .env file in the same directory
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      # Set GEMINI_SYSTEM_MD to load your custom GEMINI.md as the primary system instruction
      # This is crucial for ensuring your GEMINI.md overrides default behaviors if needed.
      # The value should be the path *inside the container*.
      - GEMINI_SYSTEM_MD=/app/GEMINI.md
    restart: unless-stopped
    command: ["gemini", "-p", "@./plan.md"]
    depends_on:
      - discord-mcp
      - github-mcp
      - jira-mcp
    networks:
      - virtual-dev-network
  # Discord MCP service
  discord-mcp:
    build:
      context: ./mcps/discord
      dockerfile: Dockerfile
    volumes:
      - ./mcps/discord:/app
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CHANNEL_ID=${DISCORD_CHANNEL_ID}
      - PORT=3001
    ports:
      - "3001:3001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - virtual-dev-network

  # GitHub MCP service
  github-mcp:
    build:
      context: ./mcps/github
      dockerfile: Dockerfile
    volumes:
      - ./mcps/github:/app
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPO=${GITHUB_REPO}
      - GITHUB_OWNER=${GITHUB_OWNER}
      - PORT=3002
    ports:
      - "3002:3002"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - virtual-dev-network

  # Jira MCP service
  jira-mcp:
    build:
      context: ./mcps/jira
      dockerfile: Dockerfile
    volumes:
      - ./mcps/jira:/app
    environment:
      - JIRA_URL=${JIRA_URL}
      - JIRA_USERNAME=${JIRA_USERNAME}
      - JIRA_API_TOKEN=${JIRA_API_TOKEN}
      - JIRA_PROJECT=${JIRA_PROJECT}
      - PORT=3003
    ports:
      - "3003:3003"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - virtual-dev-network

networks:
  virtual-dev-network:
    name: virtual-dev-network
